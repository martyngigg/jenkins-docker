<?xml version='1.0' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1.13">
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.18-SNAPSHOT">
      <projectUrl>https://github.com/martyngigg/jenkins-github-pr/</projectUrl>
      <displayName></displayName>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.25">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@1.13">
    <script>def buildParams = [
    [$class: &apos;StringParameterValue&apos;, name: &apos;GITHUB_PR_TRIGGER_SENDER_AUTHOR&apos;, value: GITHUB_PR_TRIGGER_SENDER_AUTHOR],
    [$class: &apos;StringParameterValue&apos;, name: &apos;GITHUB_PR_TRIGGER_SENDER_EMAIL&apos;, value: GITHUB_PR_TRIGGER_SENDER_EMAIL],
    [$class: &apos;StringParameterValue&apos;, name: &apos;GITHUB_PR_COMMIT_AUTHOR_NAME&apos;, value: GITHUB_PR_COMMIT_AUTHOR_NAME],
    [$class: &apos;StringParameterValue&apos;, name: &apos;GITHUB_PR_COMMIT_AUTHOR_EMAIL&apos;, value: GITHUB_PR_COMMIT_AUTHOR_EMAIL],
    [$class: &apos;StringParameterValue&apos;, name: &apos;GITHUB_PR_TARGET_BRANCH&apos;, value: GITHUB_PR_TARGET_BRANCH],
    [$class: &apos;StringParameterValue&apos;, name: &apos;GITHUB_PR_SOURCE_BRANCH&apos;, value: GITHUB_PR_SOURCE_BRANCH],
    [$class: &apos;StringParameterValue&apos;, name: &apos;GITHUB_PR_AUTHOR_EMAIL&apos;, value: GITHUB_PR_AUTHOR_EMAIL],
    [$class: &apos;StringParameterValue&apos;, name: &apos;GITHUB_PR_SHORT_DESC&apos;, value: GITHUB_PR_SHORT_DESC],
    [$class: &apos;StringParameterValue&apos;, name: &apos;GITHUB_PR_TITLE&apos;, value: GITHUB_PR_TITLE],
    [$class: &apos;StringParameterValue&apos;, name: &apos;GITHUB_PR_URL&apos;, value: GITHUB_PR_URL],
    [$class: &apos;StringParameterValue&apos;, name: &apos;GITHUB_PR_SOURCE_REPO_OWNER&apos;, value: GITHUB_PR_SOURCE_REPO_OWNER],
    [$class: &apos;StringParameterValue&apos;, name: &apos;GITHUB_PR_HEAD_SHA&apos;, value: GITHUB_PR_HEAD_SHA],
    [$class: &apos;StringParameterValue&apos;, name: &apos;GITHUB_PR_COND_REF&apos;, value: GITHUB_PR_COND_REF],
    [$class: &apos;BooleanParameterValue&apos;, name: &apos;GITHUB_PR_CAUSE_SKIP&apos;, value: GITHUB_PR_CAUSE_SKIP.toBoolean()],
    [$class: &apos;StringParameterValue&apos;, name: &apos;GITHUB_PR_NUMBER&apos;, value: GITHUB_PR_NUMBER],
    
]

echo &quot;Beginning static checks...&quot;
def passedClangFormat, passedDoxygen, passedCppcheck
parallel (clangformat: {
  try {
    build job: &apos;clang-format&apos;, parameters: buildParams, wait: true
    passedClangFormat = true 
  } catch(x) {
    passedClangFormat = false 
  }
}
, doxygen: {
  try {
    build job: &apos;doxygen&apos;, parameters: buildParams, wait: true
    passedDoxygen = true
  } catch(x) {
    passedDoxygen = false
  }
}, cppcheck: {
  try {
    build job: &apos;cppcheck&apos;, parameters: buildParams, wait: true
    passedCppcheck = true
  } catch(x) {
    passedCppcheck = false
  }
},
failFast: false)

def allPassed = passedClangFormat &amp;&amp; passedDoxygen &amp;&amp; passedCppcheck;
if (allPassed) {
  echo &apos;All static checks have passed. Moving on to build+test phase&apos;
} else {
  error &apos;One or more static checks have failed. Exiting pipeline with error&apos;
}

def passedRHEL7
parallel(rhel7: {
  try {
    build job: &apos;rhel7&apos;, parameters: buildParams, wait: true
    passedRHEL7 = true
  } catch(x) {
    passedRHEL7 = false
  }
},
failFast: false)

allPassed = passedRHEL7
if(!allPassed) {
  error &apos;One or more OS builds have failed. Exiting pipeline with error&apos;
}
</script>
    <sandbox>false</sandbox>
  </definition>
  <triggers>
    <org.jenkinsci.plugins.github.pullrequest.GitHubPRTrigger plugin="github-pullrequest@0.0.1-rc3">
      <spec></spec>
      <triggerMode>HEAVY_HOOKS</triggerMode>
      <events>
        <org.jenkinsci.plugins.github.pullrequest.events.impl.GitHubPROpenEvent/>
      </events>
      <preStatus>false</preStatus>
      <cancelQueued>false</cancelQueued>
      <skipFirstRun>false</skipFirstRun>
    </org.jenkinsci.plugins.github.pullrequest.GitHubPRTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
</flow-definition>